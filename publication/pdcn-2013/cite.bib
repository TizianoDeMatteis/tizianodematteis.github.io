@inproceedings{pdcn2013,
 abstract = {The advent of multi-/many-core architectures demands efficient run-time
supports to sustain parallel applications scalability. Synchronization
mechanisms should be optimized in order to account for different
scenarios, such as the interaction between threads executed on different
cores as well as intra-core synchronization, i.e. involving threads
executed on hardware contexts of the same core. In this perspective,
we describe the design issues of two notable mechanisms for shared-memory
parallel computations. We point out how specific architectural supports,
like hardware cache coherence and core-to-core interconnection networks,
make it possible to design optimized implementations of such mechanisms.
In this paper we discuss experimental results on three representative
architectures: a flagship Intel multi-core and two interesting network
processors. The final result helps to untangle the complex implementation
space of synchronization mechanisms.},
 address = {Innsbruck, Austria},
 author = { De Matteis, Tiziano and Luporini, Fabio and Mencagli, Gabriele and Vanneschi, Marco},
 booktitle = {Proceedings of the 11th IASTED International Conference on Parallel
and Distributed Computing and Networks},
 isbn = {978-088986943-1},
 publisher = {Iasted},
 reviews = {[[reviews_pdcn_2013| Reviews PDCN 2013 ]]},
 title = {Evaluation of Architectural Supports for Fine-Grained Synchronization
Mechanisms},
 year = {2013}
}

