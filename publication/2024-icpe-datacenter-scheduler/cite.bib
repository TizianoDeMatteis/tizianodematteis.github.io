@inproceedings{2024-icpe-datacenter-scheduler,
 abstract = {Schedulers are a crucial component in datacenter resource management. Each scheduler offers different capabilities, and users use them through their APIs. However, there is no clear understanding of what programming abstractions they offer, nor why they offer some and not others. Consequently, it is difficult to understand their differences and the performance costs imposed by their APIs. In this work, we study the programming abstractions offered by industrial schedulers, their shortcomings, and their related performance costs. We propose a general reference architecture for scheduler programming abstractions. Specifically, we analyze the programming abstractions of five popular industrial schedulers, understand the differences in their APIs, and identify the missing abstractions. Finally, we carry out exemplary experiments using trace-driven simulation demonstrating that an API extension, such as container migration, can improve total execution time per task by 81%, highlighting how schedulers sacrifice performance by implementing simpler programming abstractions. All the relevant software and data artifacts are publicly available at https://github. com/atlarge-research/quantifying-api-design.},
 author = {Aratz Manterola Lasa and
Sacheendra Talluri and
Tiziano De Matteis and
Alexandru Iosup},
 booktitle = {15th ACM/SPEC International Conference on Performance Engineering (ICPE'24)},
 publisher = {ACM},
 title = {The Cost of Simplicity: Understanding Datacenter Scheduler Programming Abstractions},
 url = {https://atlarge-research.com/pdfs/2024-icpe-datacenter-scheduler.pdf},
 year = {2024}
}
